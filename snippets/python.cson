'.source.python':

  'Coding Magic':
    'prefix': 'coding-magic'
    'body': """
            # -*- coding: utf-8 -*-
            """

  'Schema Python Template':
    'prefix': 'schema-py'
    'body': """
            # -*- coding: utf-8 -*-

            from your.package import _
            from zope import schema
            from zope.interface import Interface
            from zope.publisher.interfaces.browser import IDefaultBrowserLayer


            class I${1:Name}(Interface):

                title = schema.TextLine(
                    title=_(u"Title"),
                    required=True,
                )

                description = schema.Text(
                    title=_(u"Description"),
                    required=False,
                )
            """

  'Schema Interfaces':
    'prefix': 'schema-interfaces'
    'body': """
            # -*- coding: utf-8 -*-

            from your.package import _
            from zope import schema
            from zope.interface import Interface
            from zope.publisher.interfaces.browser import IDefaultBrowserLayer


            class I${1:YourPackage}Layer(IDefaultBrowserLayer):
            """

  'Browser View':
    'prefix': 'browser-view'
    'body': """
            # -*- coding: utf-8 -*-

            from Products.Five import BrowserView
            from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile


            class ${1:...}View(BrowserView):

                template = ViewPageTemplateFile('/.../.pt')

                def __call__(self):
                    return self.template()

                def ...(self):
                    return "Hello World!"
            """
